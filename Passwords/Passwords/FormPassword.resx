<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>